/*napvin*/
*options mlogic mprint symbolgen mcompilenote=all; /*debugging ON*/
options nomlogic nomprint nosymbolgen mcompilenote=none; /*debugging OFF*/

libname 	home	"~/";
libname 	napa	"~/Napa";

/*LOSS data set-up*/
data napa_loss (drop=Date_diff temp);
set napa.napa_loss;
if model_date>="01Jan2012"d and model_date<="31dec2012"d then temp="31dec2012"d;
else if model_date>="01Jan2013"d and model_date<="31dec2013"d then temp="31dec2013"d; 
else if model_date>="01Jan2014"d and model_date<="31dec2014"d then temp="31dec2014"d; 
else if model_date>="01Jan2015"d and model_date<="31dec2015"d then temp="31dec2015"d;
YM=input(put(temp, yymmn4.),4.);/*must have formated date value in 4-digit numeral for below comparison*/
run;
/**/


%let yymm1 = 1112;
%let yymm2 = 1212;
%let yymm3 = 1312;
%let yymm4 = 1412;
%let yymm5 = 1512;

%let	s_cut= 1 ;
%let	e_cut= 5 ; 

%macro Elig_Yr0;

%do i = &s_cut %to &e_cut %by 1;

	data Eligible_&&yymm&i(drop=Sex_Code HONNININCOME_year Haiguusya_KBN JOB_KBN age cs_zan sp_zan MOB F_MOB);
	infile "~/Napa/Eligible_&&yymm&i...csv" dlm=',' DSD missover firstobs=2;
	input 
		GEID :$8.
		kabarai_calc2 :best32.
		cs_zan :best32.
		sp_zan :best32.
		total_zan :best32.
		Sex_Code :8.
		HONNININCOME_year :best32.
		Haiguusya_KBN :8.
		JOB_KBN :8.
		age :8.
		F_MOB :$16.
		dt_cut :yymmdd10.
		kubun :8.
		MOB :8.;
	format DT_CUT yymmdd10.;

	length seg $50.;		
	  if kubun = 1 then seg = "01:On";		
	  else if F_MOB = "" then seg = "02:Off_NA";		
	  else if F_MOB = "完済6ヶ月未満" then seg = "03：完済6ヶ月未満";		
	  else if F_MOB = "完済1年" then seg = "04：完済1年";		
	  else if F_MOB = "完済2年" then seg = "05：完済2年";		
	  else if F_MOB = "完済3年" then seg = "06：完済3年";		
	  else if F_MOB = "完済4年" then seg = "07：完済4年";		
	  else if F_MOB = "完済5年" then seg = "08：完済5年";		
	  else if F_MOB = "完済6年" then seg = "09：完済6年";		
	  else if F_MOB = "完済7年" then seg = "10：完済7年";		
	  else if F_MOB = "完済8年" then seg = "11：完済8年";		
	  else if F_MOB = "完済9年" then seg = "12：完済9年";		
	  else if F_MOB = "完済10年" then seg = "13：完済10年";		
	  else if F_MOB = "完済10年以上" then seg = "14：完済10年以上";	
	
	YM=&&yymm&i;
	Status="Elig";
	Vintage_Yr="Y0";
	run;

	proc sort data=Eligible_&&yymm&i;by GEID;run;
	
	proc sql;
	create table Vin_Sum_&&yymm&i.._0 as
	select YM,Vintage_Yr,Status,kubun,Seg,count(GEID) as CNT,sum(kabarai_calc2) as Exposure,sum(total_zan) as Zan
	from Eligible_&&yymm&i
	group by YM,Vintage_Yr,Status,kubun,Seg;
	quit;
	
%end;

%mend Elig_Yr0;

%Elig_Yr0



%macro Elig_Vintage;

%do q=0 %to 3;	
	%let strt=%eval(1+%eval(1*&q));	
	%let fin=%eval(&e_cut-&strt);
	
	%do i=1 %to &fin;
		%let z=%eval(&i+&strt);

		%put q = &q;
		%put strt = &strt  fin = &fin;
		%put i = &i;
		%put z = &z;
		%put &&yymm&strt.._&i;

		data Vintage_&&yymm&strt.._&i;
		merge eligible_&&yymm&strt(in=t1 drop=Status)
			  eligible_&&yymm&z(in=t2 keep=GEID)
			  napa_loss(in=t3 keep=GEID YM Kabarai Gnkn GZ_NGZ where=(YM<=&&yymm&z));
		by GEID;
		if t1 and t3 then Status="Loss";	/*カット時点にある、当期にロスが発生した累計口座件数*/
		else if t3 then delete;
		else if t1 and t2 then Status="Elig";	/*カット時点にある、当期にもある口座件数*/
		else if t1 and not t2 then Status="SOL";	/*カット時点にある、当期にいない口座件数*/
		else if not t1 and t2 then Status="New"; 	/*カット時点にいない、当期にある口座件数*/
		Vintage_Yr="Y"||strip(&i);
		YM=strip(&&yymm&strt);
		run;
		
		/*Use values from current period for New accounts*/
		data Temp(rename=(kabarai_calc2=kab total_zan=tzan seg=seg1)); 
		merge Vintage_&&yymm&strt.._&i(in=t1 where=(Status="New"))
			  eligible_&&yymm&z(in=t2 keep=GEID seg kabarai_calc2 total_zan);
		by GEID;
		if t1;
		run;
		
		data Vintage_&&yymm&strt.._&i(drop=kab tzan seg1);
		merge Vintage_&&yymm&strt.._&i(in=t1)
			  temp(in=t2);
		by GEID;
		if t1;
		if Status="New" then do;
			kabarai_calc2=kab;
			total_zan=tzan;
			seg=seg1;
			YM=strip(&&yymm&strt);end;
		run;
		/***/
		
		/*EDA*/
		title "&yymm&strt.._&i";
		proc freq data=Vintage_&&yymm&strt.._&i;
		tables Status /norow nocol nopercent;
		run;

		proc sql;
		create table Vin_Sum_&&yymm&strt.._&i as
		select YM,Vintage_Yr,Status,kubun,GZ_NGZ,Seg,
				count(GEID) as CNT,sum(kabarai_calc2) as Exposure,sum(total_zan) as Zan,
				sum(Kabarai) as Payout,sum(Gnkn) as Gankin
		from Vintage_&&yymm&strt.._&i
		group by YM,Vintage_Yr,Status,kubun,GZ_NGZ,Seg;
		quit;
	%end;
%end;

%mend Elig_Vintage;

%Elig_Vintage


		
%macro RollUp;

%do p=0 %to 4;
	%let last=%eval(4-%eval(1*&p));
	%let v=%eval(1+&p);
	
	data Vin_Sum_&&yymm&v;
	set
	%do r=0 %to &last;
		Vin_Sum_&&yymm&v.._&r
	%end;
	;
	run;
%end;

data Vintage_Summary;
set
%do i=1 %to 5;
	Vin_Sum_&&yymm&i
%end;
;
run;

%mend RollUp;

%Rollup


proc export data =Vintage_Summary
OUTFILE= "~/Napa/Vintage_Summary.csv"
dbms = csv replace ;
run;


proc export data =napa.Vin_Sum_1112
OUTFILE= "~/Napa/Vin_Sum_1112.csv"
dbms = csv replace ;
run;








	

proc sql;
create table napa.Vin_Sum_1112_1 as
select YM,Vintage_Yr,Status,kubun,Seg,
		count(GEID) as CNT,sum(kabarai_calc2) as Exposure,sum(total_zan) as Zan,sum(Kabarai) as Payout,sum(Gnkn) as Gankin
from napa.Vintage_1112_1
group by YM,Vintage_Yr,Status,kubun,Seg;
quit;


proc freq data=napa.vintage_1212_2;
tables Status /norow nocol nopercent;
run;

proc freq data=test;
tables seg /norow nocol nopercent;
where Status="SOL";
run;








%let i=2;
%put &&yymm&i;

data loss2;
set loss1;
if q=&&yymm&i;
run;




/*EDA*/
proc freq data=loss1;
tables Cut_date /norow nocol nopercent;
run;

data test;
set
napa.Eligible_1112
napa.Eligible_1212
napa.Eligible_1312
napa.Eligible_1412
napa.Eligible_1512;
run;

proc freq data=test;
tables seg*YM /norow nocol nopercent;
run;
where kubun=0;



proc freq data=Eligible_1212;
tables seg /norow nocol nopercent;
run;
where kubun=0;

proc means data=Eligible_1112 /sum

proc means data=Eligible_1112 sum nobs maxdec=0;
var kabarai_calc2;
class seg ;
run;

/*closs*/
/* ロスの集計 */		
data missing loss2;		
  set napa_loss(drop = payout_date chargeoff_date);		
  if geid = "" then output missing;		
  else output loss2;		
run;		
		
*重複分（8組）について古い行を残す;		
data loss3;		
  set loss2;		
		
  if geid = "132424" then do;		
    if DT_CUT = "20DEC2015"d then delete;		
  end;		
  if geid = "265379" then do;		
    if DT_CUT = "20NOV2015"d then delete;		
  end;		
  if geid = "343622" then do;		
    if DT_CUT = "20OCT2015"d then delete;		
  end;		
  if geid = "79113" then do;		
    if DT_CUT = "20AUG2015"d then delete;		
  end;		
  if geid = "NA4227" then do;		
    if DT_CUT = "20AUG2015"d then delete;		
  end;		
  if geid = "NA4233" then do;		
    if DT_CUT = "20NOV2015"d then delete;		
  end;		
  if geid = "NA4263" then do;		
    if DT_CUT = "20SEP2015"d then delete;		
  end;		
  if geid = "NA8119" then do;		
    if DT_CUT = "20JUN2015"d then delete;		
  end;		
		
run;		
		
proc summary data = loss2 nway missing;		
  class geid;		
  var payout_amount gankin;		
  output out = loss_amt(drop = _type_  _freq_)		
         sum =		
		 ;
run;		
		
proc summary data = loss3 nway missing;		
  class geid;		
  var chargeoff	payout;	
  output out = loss_num_tmp(drop = _type_  _freq_)		
         max =		
		 ;
run;		
		
proc sort data = loss_num_tmp;		
  by geid chargeoff	payout;	
run;		
		
proc sort data = loss3;		
  by geid chargeoff	payout;	
run;		
		
data loss_num;		
  merge		
    loss_num_tmp(in = a)		
	loss3(drop = payout_amount gankin)	
	;	
  by geid chargeoff	payout;	
  if a;		
run;		
		
data loss4;		
  merge		
    loss_num		
	loss_amt	
	;	
  by geid;		
run;		
		
data loss5;		
  set loss4	missing;	
  proc sort;		
    by geid;		
run;		
		
*便宜上欠損にもGEID;		
data loss6(drop = tmp);		
  set loss5;		
  format tmp $2.;		
  tmp = _n_;		
  if geid = "" then geid = "NANA"||tmp;		/* geid = "" does not exisst?*/
run;		
		
data loss7;		
  set loss6;		
		
  length seg $50.;		
  if flg_on2 = 1 then seg = "01:On";		
  else if F_MOB = "NA" then seg = "02:Off_NA";		
  else if F_MOB = "完済6ヶ月未満" then seg = "03：完済6ヶ月未満";		
  else if F_MOB = "完済1年" then seg = "04：完済1年";		
  else if F_MOB = "完済2年" then seg = "05：完済2年";		
  else if F_MOB = "完済3年" then seg = "06：完済3年";		
  else if F_MOB = "完済4年" then seg = "07：完済4年";		
  else if F_MOB = "完済5年" then seg = "08：完済5年";		
  else if F_MOB = "完済6年" then seg = "09：完済6年";		
  else if F_MOB = "完済7年" then seg = "10：完済7年";		
  else if F_MOB = "完済8年" then seg = "11：完済8年";		
  else if F_MOB = "完済9年" then seg = "12：完済9年";		
  else if F_MOB = "完済10年" then seg = "13：完済10年";		
  else if F_MOB = "完済10年以上" then seg = "14：完済10年以上";		
		
  length max_ex_seg $50.;		
  if exposure_at_claim <= 0 then max_ex_seg = "01:Max Ex_0円以下";		
  else if 0 < exposure_at_claim <= 100000 then max_ex_seg = "02:Max Ex_10万円以下";		
  else if 100000 < exposure_at_claim <= 200000 then max_ex_seg = "03:Max Ex_20万円以下";		
  else if 200000 < exposure_at_claim <= 300000 then max_ex_seg = "04:Max Ex_30万円以下";		
  else if 300000 < exposure_at_claim <= 400000 then max_ex_seg = "05:Max Ex_40万円以下";		
  else if 400000 < exposure_at_claim <= 500000 then max_ex_seg = "06:Max Ex_50万円以下";		
  else if 500000 < exposure_at_claim <= 600000 then max_ex_seg = "07:Max Ex_60万円以下";		
  else if 600000 < exposure_at_claim <= 700000 then max_ex_seg = "08:Max Ex_70万円以下";		
  else if 700000 < exposure_at_claim <= 800000 then max_ex_seg = "09:Max Ex_80万円以下";		
  else if 800000 < exposure_at_claim <= 900000 then max_ex_seg = "10:Max Ex_90万円以下";		
  else if 900000 < exposure_at_claim <= 1000000 then max_ex_seg = "11:Max Ex_100万円以下";		
  else if 1000000 < exposure_at_claim then max_ex_seg = "12:Max Ex_100万円超";		
		
/*先方の（IRRL）切り方		
NA		
0		
1-10000		
10000-30000		
30000-60000		
60000-120000		
120000-230000		
230000-500000		
500000+		
*/		
		
  length max_ex_seg2 $50.;		
  if exposure_at_claim = . then max_ex_seg2 = "00:Max Ex_NA";		
  else if exposure_at_claim = 0 then max_ex_seg2 = "01:Max Ex_0円";		
  else if 0 < exposure_at_claim <= 10000 then max_ex_seg2 = "02:Max Ex_1万円以下";		
  else if 10000 < exposure_at_claim <= 30000 then max_ex_seg2 = "03:Max Ex_3万円以下";		
  else if 30000 < exposure_at_claim <= 60000 then max_ex_seg2 = "04:Max Ex_6万円以下";		
  else if 60000 < exposure_at_claim <= 120000 then max_ex_seg2 = "05:Max Ex_12万円以下";		
  else if 120000 < exposure_at_claim <= 230000 then max_ex_seg2 = "06:Max Ex_23万円以下";		
  else if 230000 < exposure_at_claim <= 500000 then max_ex_seg2 = "07:Max Ex_50万円以下";		
  else if 500000 < exposure_at_claim <= 700000 then max_ex_seg2 = "08:Max Ex_70万円以下";		
  else if 700000 < exposure_at_claim <= 1000000 then max_ex_seg2 = "09:Max Ex_100万円以下";		
  else if 1000000 < exposure_at_claim then max_ex_seg2 = "10:Max Ex_100万円超";		
		
  gz_loss = sum(payout_amount,gankin);		
		
run;		
		
proc sql;		
  create table loss_shukei as		
    select		
	  count(geid) as count,	
	  sum(exposure_at_claim) / 1000000 as max_exposure,	
	  sum(payout_amount) / 1000000 as payout_amount,	
	  sum(gankin) / 1000000 as gankin,	
	  sum(gz_loss) / 1000000 as gz_loss,	
	  GZ_NGZ,	
	  DT_CUT,	
	  seg,	
	  max_ex_seg,	
	  max_ex_seg2	
    from loss7		
    group by		
	  GZ_NGZ,	
	  DT_CUT,	
	  seg,	
	  max_ex_seg,	
	  max_ex_seg2	
;		
quit;		
		
/*重複先の調査		
proc sort data = loss_num out = tmp nodupkeys;		
  by geid;		
run;		
		
data tmp;		
  set loss_num;		
  by geid;		
  if first.geid = 1 and last.geid = 1 then delete;		
run;		
*/		


/*lcomp*/
data chikui;
set loss6;
drop JImusho Sosho Shuketsu;
rename chargeoff=CO payout=PO payout_amount=Kabarai DT_CUT=Model_date gankin=Gnkn;
where substr(GEID,1,4)^="#N/A";
run;

data peter;
set e;
drop JImusho Sosho Shuketsu trx_cnt date_diff paydate CO_date Loss;
where substr(GEID,1,4)^="#N/A";
run;

proc sql;
create table chikui as
select GEID,exposure_at_claim,flg_on2,GZ_NGZ,CO,PO,F_MOB,Kabarai,Gnkn,Model_Date
from chikui;
quit;

proc sql;
create table chikui as
select GEID,exposure_at_claim as exposure_at_claim1,
			flg_on2 as flg_on21,
			GZ_NGZ as GZ_NGZ1,
			CO as Co1,
			PO as PO1,
			F_MOB as F_MOB1,
			Kabarai as Kabarai1,
			Gnkn as Gnkin1,
			Model_Date as Model_Dat1
from chikui;
quit;


data combo;
merge peter
	  chikui;
by GEID;
run;

proc export data = combo
OUTFILE= "~/Napa/combo.csv"
dbms = csv replace ;
run ;


proc compare base=chikui compare=peter;run;

(where=(GEID not in("#N/A13","#N/A14")))


data z;
set d;
where GEID in("10100","252842");
run;

proc sort data=d out=q;by GEID YSLT;run;
run;

/*loxxv3*/
libname 	home	"~/";
libname 	napa	"~/Napa";

data Napa_Loss;
infile "~/Napa/Loss_1201_1512_SF_Settle_v2.csv" dlm=',' DSD missover firstobs=2;
input 
	GEID :$8.
	exposure_at_claim :best32.
	payout_date :yymmdd10.
	chargeoff_date :yymmdd10.
	payout_amount :best32.
	Gankin :best32.
	DT_CUT :yymmdd10.
	flg_on2 :3.
	F_MOB :$16.
	chargeoff :3.
	payout :3.
	GZ_NGZ :$6.
	Jimusho :$40.
	Sosho :$8.
	Shuketsu :$10.;
format payout_date yymmdd10. chargeoff_date yymmdd10. DT_CUT yymmdd10.;
run;

proc sort data=napa_loss;by GEID descending dt_cut;run;

data a;
set Napa_Loss;
by GEID;
if first.GEID and GEID^="#N/A" then Cnt=1;  /*重複取引履歴を特定*/
else Cnt +1;
run;


/*EDA*/
proc freq data=a;
tables cnt / norow nocol nopercent;run;

proc sql;
create table b as
select *,sum(chargeoff) as CO, sum(payout) as PO,max(cnt) as trx_cnt
from a
group by GEID;
quit;

/*EDA*/
proc freq data=b;
tables CO*PO / nocol norow nopercent;
run;


data c;
set b;
by GEID;
if CO=2 then CO=1;
if PO=2 then PO=1;
if trx_cnt=2 then do;
	if chargeoff=1 and payout=0 then do;
	Date=DT_CUT;
	YSLT=F_MOB;end;
	else if chargeoff=0 and payout=1 then do;
	Date=DT_CUT;
	YSLT=F_MOB;end;
	end;

else if trx_cnt=1 then do;
	Date=DT_CUT;
	YSLT=F_MOB;
	end;
	
else if trx_cnt=3 then do;
	if chargeoff=1 and payout=0 then do;
	Date=DT_CUT;
	YSLT=F_MOB;end;
	else if chargeoff=0 and payout=1 then do;
	Date=DT_CUT;
	YSLT=F_MOB;end;
end;

if substr(GEID,1,4)="#N/A" then do;
	Date=DT_CUT;
	YSLT=F_MOB;
	end;
	
T_Loss=Payout_amount;
if T_Loss=0 and not missing(gankin) then T_Loss=Gankin;
else if missing(T_Loss) and not missing(gankin) then T_Loss=Gankin;

format Date yymmdd10. ;
run;

/*重複分（8組）について古い行を残す*/
data c(drop=Date Temp rename=(date1=Date));
set c;
by GEID;
if geid IN ("132424","265379","343622","79113","NA4227","NA4233","NA4263","NA8119") then Temp=1;	
  
if first.GEID and Temp=1 then date1=Date;
else if missing(Temp) then date1=Date;
format Date1 yymmdd10. ;
run;
proc sort data=c;by GEID dt_cut;run;
/**/

proc sql;
create table d(drop= payout_date chargeoff_date payout_amount Gankin date T_Loss cnt chargeoff payout DT_cut) as
select *,max(payout_date) as PayDate format=yymmdd10.,
	max(chargeoff_date) as CO_date format=yymmdd10.,
	sum(payout_amount) as Kabarai,
	sum(Gankin) as Gnkn,
	max(date) as Model_Date format=yymmdd10.,
	sum(T_Loss) as Loss
from c
group by GEID
order by GEID,YSLT;
quit;

/*after the fact adjustment--for incorporation into code at later date*/
data d; 
set d;
by GEID YSLT;
if last.GEID;
run;

data e(rename=(YSLT=F_MOB));
set d(drop=F_MOB);
by GEID;
if first.GEID;
Date_Diff=intck("month",PayDate,Model_Date);
if missing(Date_Diff) then Date_Diff=intck("month",CO_date,Model_Date);

if trx_cnt=1 and Kabarai>0 and Gnkn>0 then Loss=Kabarai+Gnkn; /*63 例外GEID*/
run;

/*EDA*/
proc freq data=e;
tables Date_diff /norow nocol nopercent;
run;

data Napa.Napa_Loss;
set e;
run;

proc export data = e
OUTFILE= "~/Napa/napa_loss.csv"
dbms = csv replace ;
run ;






data p (drop=exposure_at_claim F_mob flg_on2 gz_ngz );
set e;
if missing(Date_diff);
run;




data d(drop=exposure_at_claim F_MOB);
set c;
where tcnt=2;
run;


if tcnt=2 then do;
	if first.payout_date and payout_date=1 and chargeoff_date=0 then 



/*EDA*/
proc means data=napa_loss n sum;
var exposure_at_claim;
class F_MOB;
run;




/*proc import out=napa_loss datafile="~/Napa/Napa_Loss.csv"
dbms=csv replace;run;*/
